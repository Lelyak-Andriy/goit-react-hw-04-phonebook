{"version":3,"sources":["components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","hooks/useLocaleStorage.jsx","App.js","index.js","components/ContactsList/ContactsList.module.css","components/ContactsForm/ContactsForm.module.css","components/Filter/Filter.module.css"],"names":["ContactsForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","className","styles","form","preventDefault","label","input","type","pattern","title","required","onChange","button","ContactsListItem","contact","onDeleteContact","info","onClick","id","ContactsList","contacts","length","warning","list","map","item","Filter","useLocaleStorage","key","initValue","localStorage","getItem","JSON","parse","err","console","log","getValue","state","setState","useEffect","setItem","stringify","App","setContacts","filter","setFilter","nanoid","find","toLowerCase","alert","prevContacts","includes","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c8bde87e.chunk.js","sourcesContent":["import { useState } from 'react';\nimport styles from './ContactsForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ContactsForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactsForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import styles from './ContactsList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactsListItem = ({ contact, onDeleteContact }) => (\n    <>\n        <span className={styles.info}>{contact.name}: {contact.number}</span>\n        <button className={styles.button} type=\"button\" onClick={() =>\n            onDeleteContact(contact.id)}>Delete</button>\n    </>\n);\n\nContactsListItem.propTypes = {\n    contact: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsListItem;","import styles from './ContactsList.module.css';\nimport PropTypes from 'prop-types';\nimport ContactsListItem from './ContactsListItem';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => (\n    (contacts.length === 0) ? <div className={styles.warning}>You have no contacts!</div>\n    : <ul className={styles.list}>\n        {contacts.map(contact => (\n            <li key={contact.id} className={styles.item}>\n                <ContactsListItem contact={contact} onDeleteContact={onDeleteContact}/>\n            </li>\n        ))}\n    </ul>\n);\n\nContactsList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;","import styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;","import { useState, useEffect } from 'react';\n\nconst getValue = (key, initValue) => {\n  const value = localStorage.getItem(key);\n  if (value) {\n    try {\n      return JSON.parse(value);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  return initValue;\n};\nexport default function useLocaleStorage(key, initValue) {\n  const [state, setState] = useState(getValue(key, initValue));\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n}\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactsForm from './components/ContactsForm/ContactsForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\nimport useLocaleStorage from './hooks/useLocaleStorage';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocaleStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addNewContact = (name, number) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      alert(`${number} is already in contacts`);\n    } else {\n      setContacts(prevContacts => [contact, ...prevContacts]);\n    }\n  };\n\n  const filteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const handleChangeFilter = e => setFilter(e.target.value);\n\n  const deleteContact = contactId => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactsForm onSubmit={addNewContact} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={handleChangeFilter} />\n      <ContactsList\n        contacts={filteredContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3vJim\",\"item\":\"ContactsList_item__25FH9\",\"info\":\"ContactsList_info__DxfWI\",\"button\":\"ContactsList_button__2Q_RX\",\"warning\":\"ContactsList_warning__2fuvq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__2Dhk_\",\"label\":\"ContactsForm_label__2OWXM\",\"input\":\"ContactsForm_input__1JGWg\",\"button\":\"ContactsForm_button__2dUe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__Iwoaz\",\"input\":\"Filter_input__1FVZo\"};"],"sourceRoot":""}